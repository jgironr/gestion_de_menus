generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Producto {
  id           Int      @id @default(autoincrement())
  descripcion  String
  presentacion String
  categoria    String
  subcategoria String
  costo        Float
  unidad       Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  menus        MenuProducto[]
  complementos ComplementoProducto[]

  historial HistorialProducto[]
}

model HistorialProducto {
  id                    Int      @id @default(autoincrement())
  productoId            Int
  producto              Producto @relation(fields: [productoId], references: [id])
  precioCostoAnterior   Float?
  precioCostoNuevo      Float?
  precioPublicoAnterior Float?
  precioPublicoNuevo    Float?
  cambio                String
  usuario               String
  fechaCambio           DateTime @default(now())
}

model MenuProducto {
  id         Int @id @default(autoincrement())
  menuId     Int
  productoId Int
  cantidad   Int

  menu     Menu     @relation(fields: [menuId], references: [id], onDelete: Cascade)
  producto Producto @relation(fields: [productoId], references: [id])
}

model Complemento {
  id        Int      @id @default(autoincrement())
  nombre    String
  menuId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menu      Menu                  @relation(fields: [menuId], references: [id], onDelete: Cascade)
  productos ComplementoProducto[]
}

model ComplementoProducto {
  id            Int @id @default(autoincrement())
  complementoId Int
  productoId    Int
  cantidad      Int

  complemento Complemento @relation(fields: [complementoId], references: [id])
  producto    Producto    @relation(fields: [productoId], references: [id])
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  direccion String
  telefono  String
  userEmail String
  nameUser  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  dias Dia[]
}

model Dia {
  id        Int     @id @default(autoincrement())
  dia       String
  clienteId Int
  cliente   Cliente @relation(fields: [clienteId], references: [id])

  menus Menu[] @relation("DiaMenu")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id            Int      @id @default(autoincrement())
  nombre        String
  costoTotal    Float
  gananciaTotal Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  dias Dia[] @relation("DiaMenu")

  productos    MenuProducto[]
  complementos Complemento[]
}

model Factura {
  id                   Int      @id @default(autoincrement())
  cantidadIngredientes Int
  costoTotalCompra     Float
  costoTotalVenta      Float
  gananciaTotal        Float
  escuela              String
  escuelaId            Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}
